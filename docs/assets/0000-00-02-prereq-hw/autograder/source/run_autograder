#!/usr/bin/env python3
import os
import sys
import unittest
import subprocess
import shutil
from gradescope_utils.autograder_utils.json_test_runner import JSONTestRunner
import importlib.util
from functools import partial

def imp_load_source(module_name, module_path):
    modulespec = importlib.util.spec_from_file_location(module_name,
                                                        module_path)
    module = importlib.util.module_from_spec(modulespec)
    sys.modules[module_name] = module
    modulespec.loader.load_module()
    return module

def results_json_post_processor(tests, results_json_data):
    results_json_data["tests"] = tests + results_json_data["tests"]


def run_tests(ROOT_DIR, tests):
    ## RUN tests
    os.chdir(f"{ROOTDIR}/source")
    resultsjson = os.path.join(ROOTDIR, "results", "results.json")
    suite = unittest.TestSuite()

    for name in test_generator.find_data_directories():
        klass = test_generator.build_test_class(name)
        suite.addTest(klass(test_generator.TestMetaclass.test_name(name)))

    os.makedirs(os.path.dirname(resultsjson), exist_ok=True)
    with open(resultsjson, 'w') as f:
        JSONTestRunner(visibility='visible', stream=f,
                       stdout_visibility="visible",
                       post_processor=partial(results_json_post_processor,
                                              tests)).run(suite)


if __name__ == '__main__':
    if os.path.exists("/autograder"):
        os.chdir("/autograder")
    ROOTDIR = os.getcwd()
    FILES = ["test_factorial.c", "test_prime.c"]
    global test_generator
    test_generator = imp_load_source("test_generator",
                                     f"{ROOTDIR}/source/test_generator.py")
    tests = []
    for file in FILES:
        tests.extend(
            test_generator.prepare_and_compile_submission(ROOTDIR, file))
    run_tests(ROOTDIR, tests)


